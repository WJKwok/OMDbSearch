[{"/Users/wen/Development/OMDbSearch/frontend/src/index.js":"1","/Users/wen/Development/OMDbSearch/frontend/src/App.js":"2","/Users/wen/Development/OMDbSearch/frontend/src/Pages/Nomination.js":"3","/Users/wen/Development/OMDbSearch/frontend/src/Components/SearchBar.js":"4","/Users/wen/Development/OMDbSearch/frontend/src/Services/OMDbRequests.js":"5","/Users/wen/Development/OMDbSearch/frontend/src/Components/NominatedList.js":"6","/Users/wen/Development/OMDbSearch/frontend/src/Components/ProgressBar.js":"7","/Users/wen/Development/OMDbSearch/frontend/src/Components/utils/fallBackMoviePoster.js":"8","/Users/wen/Development/OMDbSearch/frontend/src/Components/Banner.js":"9","/Users/wen/Development/OMDbSearch/frontend/src/Components/NextPageButton.js":"10","/Users/wen/Development/OMDbSearch/frontend/src/ApolloProvider.js":"11","/Users/wen/Development/OMDbSearch/frontend/src/Pages/Results.js":"12","/Users/wen/Development/OMDbSearch/frontend/src/Components/ClearLocalStorageButton.js":"13","/Users/wen/Development/OMDbSearch/frontend/src/Components/movieCardHorizontal.js":"14","/Users/wen/Development/OMDbSearch/frontend/src/Components/MovieCard.js":"15","/Users/wen/Development/OMDbSearch/frontend/src/Components/SearchResultCards.js":"16","/Users/wen/Development/OMDbSearch/frontend/src/Components/MovieCardHorizontal.js":"17","/Users/wen/Development/OMDbSearch/frontend/src/Context/BannerContext.tsx":"18"},{"size":148,"mtime":1610198392657,"results":"19","hashOfConfig":"20"},{"size":619,"mtime":1610206030677,"results":"21","hashOfConfig":"20"},{"size":4695,"mtime":1610884868708,"results":"22","hashOfConfig":"20"},{"size":1074,"mtime":1610032935972,"results":"23","hashOfConfig":"20"},{"size":348,"mtime":1610634327305,"results":"24","hashOfConfig":"20"},{"size":590,"mtime":1610547858014,"results":"25","hashOfConfig":"20"},{"size":1928,"mtime":1610725368368,"results":"26","hashOfConfig":"20"},{"size":132,"mtime":1610025893673,"results":"27","hashOfConfig":"20"},{"size":1025,"mtime":1610621209345,"results":"28","hashOfConfig":"20"},{"size":591,"mtime":1610033904350,"results":"29","hashOfConfig":"20"},{"size":464,"mtime":1610632816068,"results":"30","hashOfConfig":"20"},{"size":2964,"mtime":1610884582082,"results":"31","hashOfConfig":"20"},{"size":639,"mtime":1610620710049,"results":"32","hashOfConfig":"20"},{"size":1399,"mtime":1610547819553,"results":"33","hashOfConfig":"34"},{"size":1614,"mtime":1610628992796,"results":"35","hashOfConfig":"20"},{"size":448,"mtime":1610621392077,"results":"36","hashOfConfig":"20"},{"size":1446,"mtime":1610627629586,"results":"37","hashOfConfig":"20"},{"size":1535,"mtime":1610724993403,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"2wel5u",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h1t1sc",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/wen/Development/OMDbSearch/frontend/src/index.js",[],["81","82"],"/Users/wen/Development/OMDbSearch/frontend/src/App.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Pages/Nomination.js",["83","84"],"import React, { useState, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\nimport { gql, useMutation } from '@apollo/client';\n\nimport { SearchBar } from '../Components/SearchBar';\nimport { SearchResultCards } from '../Components/SearchResultCards';\nimport { NominatedList } from '../Components/NominatedList';\nimport { ProgressBar } from '../Components/ProgressBar';\nimport { NextPageButton } from '../Components/NextPageButton';\n\nimport { OMDdBySearch, createOMDbURL } from '../Services/OMDbRequests';\nimport { useSetBannerMessage, BannerCodeTypes } from '../Context/BannerContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tpaddingTop: 20,\n\t},\n\thorizontalScroll: {\n\t\tdisplay: 'flex',\n\t\toverflowX: 'auto',\n\t\tpadding: '20px 0px',\n\t},\n});\n\nexport const Nomination = (props) => {\n\tconst classes = useStyles();\n\tconst setBannerMessage = useSetBannerMessage();\n\n\tconst [searchInput, setSearchInput] = useState('');\n\tconst setSearchInputDebounced = debounce(setSearchInput, 500);\n\n\tconst [currentResultPage, setCurrentResultPage] = useState(1);\n\tconst [searchResults, setSearchResults] = useState({});\n\tconst [nominatedMovies, setNominatedMovies] = useState({});\n\n\tconst minNominatedMoviesLength = 5;\n\n\tuseEffect(() => {\n\t\tif (localStorage.getItem('userNomination')) {\n\t\t\tconst nominatedMoviesLocalStorage = JSON.parse(\n\t\t\t\tlocalStorage.getItem('userNomination')\n\t\t\t);\n\t\t\tsetNominatedMovies(nominatedMoviesLocalStorage);\n\t\t}\n\n\t\tif (localStorage.getItem('nominationSubmitted')) {\n\t\t\tsetBannerMessage({\n\t\t\t\ttext: 'You have already submitted your nomination 🚨',\n\t\t\t\tcode: BannerCodeTypes.Error,\n\t\t\t});\n\t\t\tprops.history.push('/results');\n\t\t}\n\t}, []);\n\n\tuseEffect(async () => {\n\t\tif (searchInput) {\n\t\t\tconst OMDbRequestUrl = createOMDbURL(searchInput);\n\t\t\tconst results = await OMDdBySearch(OMDbRequestUrl);\n\t\t\tsetSearchResults(results);\n\t\t\tsetCurrentResultPage(1);\n\t\t\tconsole.log(results);\n\t\t}\n\t}, [searchInput]);\n\n\tconst nominationClickHandler = (movie) => {\n\t\tconst newNominatedMovies = { ...nominatedMovies, ...movie };\n\t\tsetNominatedMovies(newNominatedMovies);\n\t\tlocalStorage.setItem('userNomination', JSON.stringify(newNominatedMovies));\n\t};\n\n\tconst removeNominationHandler = (movieId) => {\n\t\tconst nominatedMoviesCopy = {\n\t\t\t...nominatedMovies,\n\t\t};\n\t\tdelete nominatedMoviesCopy[movieId];\n\t\tsetNominatedMovies(nominatedMoviesCopy);\n\t\tlocalStorage.setItem('userNomination', JSON.stringify(nominatedMoviesCopy));\n\t};\n\n\tconst getNextPageOfResults = async () => {\n\t\tconst nextPageToQuery = currentResultPage + 1;\n\t\tconst OMDbRequestUrl = createOMDbURL(searchInput, nextPageToQuery);\n\t\tconst results = await OMDdBySearch(OMDbRequestUrl);\n\t\tif (results.Response === 'True') {\n\t\t\tconst appendedSearchResults = {\n\t\t\t\t...searchResults,\n\t\t\t\tSearch: [...searchResults.Search, ...results.Search],\n\t\t\t};\n\t\t\tsetSearchResults(appendedSearchResults);\n\t\t\tsetCurrentResultPage((prev) => prev + 1);\n\t\t}\n\t};\n\n\tconst [submitNominations] = useMutation(NOMINATE_MOVIES, {\n\t\tonCompleted() {\n\t\t\tsetBannerMessage({\n\t\t\t\ttext: 'Submission completed 🥳 Your nominations have a 👍 sign',\n\t\t\t\tcode: BannerCodeTypes.Success,\n\t\t\t});\n\t\t\tlocalStorage.setItem('nominationSubmitted', JSON.stringify(true));\n\t\t\tprops.history.push('/results');\n\t\t},\n\t\tvariables: {\n\t\t\tmovieInputs: Object.keys(nominatedMovies).map((movieKey) => {\n\t\t\t\tconst movieData = nominatedMovies[movieKey];\n\t\t\t\tdelete movieData.Type;\n\t\t\t\treturn movieData;\n\t\t\t}),\n\t\t},\n\t\tonError({ graphQLErrors, networkError }) {\n\t\t\tif (graphQLErrors) {\n\t\t\t\tconsole.log('graphQLErrors', graphQLErrors);\n\t\t\t}\n\t\t\tif (networkError) {\n\t\t\t\tsetBannerMessage({\n\t\t\t\t\ttext: `[Network Error]: ${networkError}`,\n\t\t\t\t\tcode: BannerCodeTypes.Error,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t});\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<SearchBar searchInputUpdate={setSearchInputDebounced} />\n\t\t\t<div className={classes.horizontalScroll}>\n\t\t\t\t{searchResults.Response === 'True' ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<SearchResultCards\n\t\t\t\t\t\t\tsearchResults={searchResults.Search}\n\t\t\t\t\t\t\tnominationClickHandler={nominationClickHandler}\n\t\t\t\t\t\t\tnominatedMovies={nominatedMovies}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<NextPageButton onClick={getNextPageOfResults} />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>{searchResults.Error}</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<ProgressBar\n\t\t\t\tcurrent={Object.keys(nominatedMovies).length}\n\t\t\t\tgoal={minNominatedMoviesLength}\n\t\t\t\tsubmitHandler={submitNominations}\n\t\t\t/>\n\t\t\t<NominatedList\n\t\t\t\tnominatedMovies={nominatedMovies}\n\t\t\t\tremoveNominationHandler={removeNominationHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst NOMINATE_MOVIES = gql`\n\tmutation nominateMovies($movieInputs: [MovieInput]!) {\n\t\tnominateMovies(movieInputs: $movieInputs) {\n\t\t\tTitle\n\t\t\tvoteCount\n\t\t}\n\t}\n`;\n","/Users/wen/Development/OMDbSearch/frontend/src/Components/SearchBar.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Services/OMDbRequests.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/NominatedList.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/ProgressBar.js",["85"],"import React, { useEffect } from 'react';\nimport { BannerCodeTypes, useSetBannerMessage } from '../Context/BannerContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tmarginBottom: 10,\n\t},\n\tprogressDiv: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t},\n\tprogressNumber: {\n\t\tmargin: '0px 10px',\n\t},\n\tprogressBar: {\n\t\tflex: 1,\n\t},\n});\n\nexport const ProgressBar = ({ goal, current, submitHandler }) => {\n\tconst classes = useStyles();\n\tconst setBannerMessage = useSetBannerMessage();\n\n\tconst exceededGoal = current > goal;\n\tconst reachedGoal = current === goal;\n\tconst progress = exceededGoal ? 100 : (current / goal) * 100;\n\n\tconst errorMessage = `🚨 You can only nominate 5 movies, please remove ${\n\t\tcurrent - goal\n\t}`;\n\n\tuseEffect(() => {\n\t\tif (reachedGoal) {\n\t\t\tsetBannerMessage({\n\t\t\t\ttext: 'You have nominated 5 movies, you may submit it now 😌',\n\t\t\t\tcode: BannerCodeTypes.Success,\n\t\t\t});\n\t\t}\n\n\t\tif (exceededGoal) {\n\t\t\tsetBannerMessage({\n\t\t\t\ttext: errorMessage,\n\t\t\t\tcode: BannerCodeTypes.Error,\n\t\t\t});\n\t\t}\n\t}, [goal, current]);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.progressDiv}>\n\t\t\t\t<LinearProgress\n\t\t\t\t\tclassName={classes.progressBar}\n\t\t\t\t\tvariant=\"determinate\"\n\t\t\t\t\tcolor={exceededGoal ? 'secondary' : 'primary'}\n\t\t\t\t\tvalue={progress}\n\t\t\t\t/>\n\t\t\t\t<Typography className={classes.progressNumber} variant=\"body1\">\n\t\t\t\t\t{current}/{goal}\n\t\t\t\t</Typography>\n\t\t\t\t<Button\n\t\t\t\t\tdata-testid=\"submit-nomination-button\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tonClick={submitHandler}\n\t\t\t\t\tdisabled={current !== goal}\n\t\t\t\t>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t{exceededGoal && (\n\t\t\t\t<Typography variant=\"body1\" color=\"secondary\">\n\t\t\t\t\t{errorMessage}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","/Users/wen/Development/OMDbSearch/frontend/src/Components/utils/fallBackMoviePoster.js",[],["86","87"],"/Users/wen/Development/OMDbSearch/frontend/src/Components/Banner.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/NextPageButton.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/ApolloProvider.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Pages/Results.js",["88"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport { MovieCardHorizontal } from '../Components/MovieCardHorizontal';\nimport { ClearLocalStorageButton } from '../Components/ClearLocalStorageButton';\n\nimport { useSetBannerMessage, BannerCodeTypes } from '../Context/BannerContext';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tpaddingTop: 20,\n\t},\n\tnominatedCards: {\n\t\tpaddingTop: 20,\n\t},\n\tcardVoteWrapper: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t},\n\trank: {\n\t\twidth: '3ch',\n\t},\n\tvotes: {\n\t\twidth: '6ch',\n\t\tpadding: 5,\n\t\tmarginLeft: 5,\n\t\tbackgroundColor: theme.palette.primary.light,\n\t\tborderRadius: '10%',\n\t\tcolor: 'white',\n\t},\n}));\n\nexport const Results = (props) => {\n\tconst classes = useStyles();\n\tconst setBannerMessage = useSetBannerMessage();\n\tconst { loading, data } = useQuery(GET_NOMINATION, {\n\t\tfetchPolicy: 'network-only',\n\t\tonError({ graphQLErrors, networkError }) {\n\t\t\tif (graphQLErrors) {\n\t\t\t\tconsole.log('graphQLErrors', graphQLErrors);\n\t\t\t}\n\t\t\tif (networkError) {\n\t\t\t\tsetBannerMessage({\n\t\t\t\t\ttext: `[Network Error]: ${networkError}`,\n\t\t\t\t\tcode: BannerCodeTypes.Error,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t});\n\tconst [nominatedMovies, setNominatedMovies] = useState({});\n\n\tuseEffect(() => {\n\t\tif (localStorage.getItem('userNomination')) {\n\t\t\tconst nominatedMoviesLocalStorage = JSON.parse(\n\t\t\t\tlocalStorage.getItem('userNomination')\n\t\t\t);\n\t\t\tsetNominatedMovies(nominatedMoviesLocalStorage);\n\t\t}\n\n\t\tif (!localStorage.getItem('nominationSubmitted')) {\n\t\t\tsetBannerMessage({\n\t\t\t\ttext: 'Please submit nominations before viewing the result page 😏',\n\t\t\t\tcode: BannerCodeTypes.Error,\n\t\t\t});\n\t\t\tprops.history.push('/');\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{loading && <p>Loading results...</p>}\n\t\t\t{data && (\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<ClearLocalStorageButton\n\t\t\t\t\t\tadditionalAction={() => props.history.push('/')}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className={classes.nominatedCards}>\n\t\t\t\t\t\t{data.getNominations.map((nominee, index) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={nominee.imdbID}\n\t\t\t\t\t\t\t\tdata-testid=\"nomination-result-card\"\n\t\t\t\t\t\t\t\tclassName={classes.cardVoteWrapper}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={classes.rank}\n\t\t\t\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{index + 1}.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<MovieCardHorizontal movie={nominee} />\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tclassName={classes.votes}\n\t\t\t\t\t\t\t\t\tvariant=\"body1\"\n\t\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t\t\tdata-testid=\"vote-count\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{nominee.voteCount}\n\t\t\t\t\t\t\t\t\t{nominee.imdbID in nominatedMovies ? (\n\t\t\t\t\t\t\t\t\t\t<span data-testid=\"voted-emoji\">👍</span>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nconst GET_NOMINATION = gql`\n\tquery getNominations {\n\t\tgetNominations {\n\t\t\tPoster\n\t\t\tTitle\n\t\t\tYear\n\t\t\timdbID\n\t\t\tvoteCount\n\t\t}\n\t}\n`;\n","/Users/wen/Development/OMDbSearch/frontend/src/Components/ClearLocalStorageButton.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/movieCardHorizontal.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/MovieCard.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/SearchResultCards.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/MovieCardHorizontal.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Context/BannerContext.tsx",[],["89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":55,"column":5,"nodeType":"97","endLine":55,"endColumn":7,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":57,"column":12,"nodeType":"100","endLine":65,"endColumn":3},{"ruleId":"95","severity":1,"message":"101","line":51,"column":5,"nodeType":"97","endLine":51,"endColumn":20,"suggestions":"102"},{"ruleId":"91","replacedBy":"103"},{"ruleId":"93","replacedBy":"104"},{"ruleId":"95","severity":1,"message":"96","line":70,"column":5,"nodeType":"97","endLine":70,"endColumn":7,"suggestions":"105"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'setBannerMessage'. Either include them or remove the dependency array.","ArrayExpression",["108"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'errorMessage', 'exceededGoal', 'reachedGoal', and 'setBannerMessage'. Either include them or remove the dependency array.",["109"],["106"],["107"],["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"111","fix":"115"},"Update the dependencies array to be: [props.history, setBannerMessage]",{"range":"116","text":"117"},"Update the dependencies array to be: [goal, current, reachedGoal, exceededGoal, setBannerMessage, errorMessage]",{"range":"118","text":"119"},{"range":"120","text":"117"},[1712,1714],"[props.history, setBannerMessage]",[1231,1246],"[goal, current, reachedGoal, exceededGoal, setBannerMessage, errorMessage]",[1800,1802]]