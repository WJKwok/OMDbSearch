[{"/Users/wen/Development/OMDbSearch/frontend/src/index.js":"1","/Users/wen/Development/OMDbSearch/frontend/src/App.js":"2","/Users/wen/Development/OMDbSearch/frontend/src/Pages/Nomination.js":"3","/Users/wen/Development/OMDbSearch/frontend/src/Components/SearchBar.js":"4","/Users/wen/Development/OMDbSearch/frontend/src/Services/OMDbRequests.js":"5","/Users/wen/Development/OMDbSearch/frontend/src/Components/ResultCards.js":"6","/Users/wen/Development/OMDbSearch/frontend/src/Components/NominatedList.js":"7","/Users/wen/Development/OMDbSearch/frontend/src/Components/ProgressBar.js":"8","/Users/wen/Development/OMDbSearch/frontend/src/Components/utils/fallBackMoviePoster.js":"9","/Users/wen/Development/OMDbSearch/frontend/src/Context/BannerContext.js":"10","/Users/wen/Development/OMDbSearch/frontend/src/Components/Banner.js":"11","/Users/wen/Development/OMDbSearch/frontend/src/Components/NextPageButton.js":"12"},{"size":193,"mtime":1609955036220,"results":"13","hashOfConfig":"14"},{"size":386,"mtime":1610028449476,"results":"15","hashOfConfig":"14"},{"size":2705,"mtime":1610031979923,"results":"16","hashOfConfig":"14"},{"size":1074,"mtime":1610032935972,"results":"17","hashOfConfig":"14"},{"size":336,"mtime":1610031936941,"results":"18","hashOfConfig":"14"},{"size":1927,"mtime":1610036461912,"results":"19","hashOfConfig":"14"},{"size":1459,"mtime":1610025936332,"results":"20","hashOfConfig":"14"},{"size":1796,"mtime":1610028970794,"results":"21","hashOfConfig":"14"},{"size":132,"mtime":1610025893673,"results":"22","hashOfConfig":"14"},{"size":597,"mtime":1610028480671,"results":"23","hashOfConfig":"14"},{"size":1026,"mtime":1610036569203,"results":"24","hashOfConfig":"14"},{"size":591,"mtime":1610033904350,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"h1t1sc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wen/Development/OMDbSearch/frontend/src/index.js",[],["53","54"],"/Users/wen/Development/OMDbSearch/frontend/src/App.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Pages/Nomination.js",["55"],"import React, { useState, useEffect } from 'react';\nimport debounce from 'lodash/debounce';\n\nimport { SearchBar } from '../Components/SearchBar';\nimport { ResultCards } from '../Components/ResultCards';\nimport { NominatedList } from '../Components/NominatedList';\nimport { ProgressBar } from '../Components/ProgressBar';\nimport { NextPageButton } from '../Components/NextPageButton';\n\nimport { OMDdBySearch, createOMDbURL } from '../Services/OMDbRequests';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\thorizontalScroll: {\n\t\tdisplay: 'flex',\n\t\toverflowX: 'auto',\n\t\tpadding: '20px 0px',\n\t},\n});\n\nexport const Nomination = () => {\n\tconst classes = useStyles();\n\tconst [searchInput, setSearchInput] = useState('');\n\tconst setSearchInputDebounced = debounce(setSearchInput, 500);\n\n\tconst [currentResultPage, setCurrentResultPage] = useState(1);\n\tconst [searchResults, setSearchResults] = useState({});\n\tconst [nominatedMovies, setNominatedMovies] = useState({});\n\n\tconst minNominatedMoviesLength = 5;\n\n\tuseEffect(async () => {\n\t\tconst OMDbRequestUrl = createOMDbURL(searchInput);\n\t\tconst results = await OMDdBySearch(OMDbRequestUrl);\n\t\tsetSearchResults(results);\n\t\tsetCurrentResultPage(1);\n\t\tconsole.log(results);\n\t}, [searchInput]);\n\n\tconst nominationClickHandler = (movie) => {\n\t\tsetNominatedMovies({ ...nominatedMovies, ...movie });\n\t};\n\n\tconst removeNominationHandler = (movieId) => {\n\t\tconst nominatedMoviesCopy = {\n\t\t\t...nominatedMovies,\n\t\t};\n\t\tdelete nominatedMoviesCopy[movieId];\n\t\tsetNominatedMovies(nominatedMoviesCopy);\n\t};\n\n\tconst getNextPageOfResults = async () => {\n\t\tconst nextPageToQuery = currentResultPage + 1;\n\t\tconst OMDbRequestUrl = createOMDbURL(searchInput, nextPageToQuery);\n\t\tconst results = await OMDdBySearch(OMDbRequestUrl);\n\t\tconst appendedSearchResults = {\n\t\t\t...searchResults,\n\t\t\tSearch: [...searchResults.Search, ...results.Search],\n\t\t};\n\t\tsetSearchResults(appendedSearchResults);\n\t\tsetCurrentResultPage((prev) => prev + 1);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<SearchBar searchInputUpdate={setSearchInputDebounced} />\n\t\t\t<div className={classes.horizontalScroll}>\n\t\t\t\t{searchResults.Response === 'True' ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ResultCards\n\t\t\t\t\t\t\tsearchResults={searchResults.Search}\n\t\t\t\t\t\t\tnominationClickHandler={nominationClickHandler}\n\t\t\t\t\t\t\tnominatedMovies={nominatedMovies}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<NextPageButton onClick={getNextPageOfResults} />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>{searchResults.Error}</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<ProgressBar\n\t\t\t\tcurrent={Object.keys(nominatedMovies).length}\n\t\t\t\tgoal={minNominatedMoviesLength}\n\t\t\t/>\n\t\t\t<NominatedList\n\t\t\t\tnominatedMovies={nominatedMovies}\n\t\t\t\tremoveNominationHandler={removeNominationHandler}\n\t\t\t/>\n\t\t</>\n\t);\n};\n","/Users/wen/Development/OMDbSearch/frontend/src/Components/SearchBar.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Services/OMDbRequests.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/ResultCards.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/NominatedList.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/ProgressBar.js",["56"],"import React, { useEffect, useContext } from 'react';\nimport { BannerContext } from '../Context/BannerContext';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tmarginBottom: 10,\n\t},\n\tprogressDiv: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t},\n\tprogressNumber: {\n\t\tmargin: '0px 10px',\n\t},\n\tprogressBar: {\n\t\tflex: 1,\n\t},\n});\n\nexport const ProgressBar = ({ goal, current }) => {\n\tconst classes = useStyles();\n\tconst { setBannerMessage } = useContext(BannerContext);\n\n\tconst exceededGoal = current > goal;\n\tconst reachedGoal = current === goal;\n\tconst progress = exceededGoal ? 100 : (current / goal) * 100;\n\n\tconst errorMessage = `ðŸš¨ You can only nominate 5 movies, please remove ${\n\t\tcurrent - goal\n\t}`;\n\n\tuseEffect(() => {\n\t\tif (reachedGoal) {\n\t\t\tsetBannerMessage({\n\t\t\t\ttext: 'You have nominated 5 movies, you may submit it now ðŸ˜Œ',\n\t\t\t\tcode: 'Success',\n\t\t\t});\n\t\t}\n\n\t\tif (exceededGoal) {\n\t\t\tsetBannerMessage({\n\t\t\t\ttext: errorMessage,\n\t\t\t\tcode: 'Error',\n\t\t\t});\n\t\t}\n\t}, [goal, current]);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div className={classes.progressDiv}>\n\t\t\t\t<LinearProgress\n\t\t\t\t\tclassName={classes.progressBar}\n\t\t\t\t\tvariant=\"determinate\"\n\t\t\t\t\tcolor={exceededGoal ? 'secondary' : 'primary'}\n\t\t\t\t\tvalue={progress}\n\t\t\t\t/>\n\t\t\t\t<Typography className={classes.progressNumber} variant=\"body1\">\n\t\t\t\t\t{current}/{goal}\n\t\t\t\t</Typography>\n\t\t\t\t<Button variant=\"outlined\" disabled={current !== goal}>\n\t\t\t\t\tNominate\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t{exceededGoal && (\n\t\t\t\t<Typography variant=\"body1\" color=\"secondary\">\n\t\t\t\t\t{errorMessage}\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","/Users/wen/Development/OMDbSearch/frontend/src/Components/utils/fallBackMoviePoster.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Context/BannerContext.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/Banner.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Components/NextPageButton.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":33,"column":12,"nodeType":"63","endLine":39,"endColumn":3},{"ruleId":"61","severity":1,"message":"64","line":51,"column":5,"nodeType":"65","endLine":51,"endColumn":20,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'errorMessage', 'exceededGoal', 'reachedGoal', and 'setBannerMessage'. Either include them or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [goal, current, reachedGoal, exceededGoal, setBannerMessage, errorMessage]",{"range":"72","text":"73"},[1185,1200],"[goal, current, reachedGoal, exceededGoal, setBannerMessage, errorMessage]"]