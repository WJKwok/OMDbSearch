[{"/Users/wen/Development/OMDbSearch/frontend/src/index.js":"1","/Users/wen/Development/OMDbSearch/frontend/src/App.js":"2","/Users/wen/Development/OMDbSearch/frontend/src/Pages/Nomination.js":"3","/Users/wen/Development/OMDbSearch/frontend/src/Components/SearchBar.js":"4","/Users/wen/Development/OMDbSearch/frontend/src/Services/OMDbRequests.js":"5"},{"size":193,"mtime":1609955036220,"results":"6","hashOfConfig":"7"},{"size":204,"mtime":1609955348172,"results":"8","hashOfConfig":"7"},{"size":862,"mtime":1609956197799,"results":"9","hashOfConfig":"7"},{"size":1006,"mtime":1609955573330,"results":"10","hashOfConfig":"7"},{"size":163,"mtime":1609955853389,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"h1t1sc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/wen/Development/OMDbSearch/frontend/src/index.js",[],["23","24"],"/Users/wen/Development/OMDbSearch/frontend/src/App.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Pages/Nomination.js",["25"],"/Users/wen/Development/OMDbSearch/frontend/src/Components/SearchBar.js",[],"/Users/wen/Development/OMDbSearch/frontend/src/Services/OMDbRequests.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":14,"column":12,"nodeType":"32","endLine":19,"endColumn":3},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]